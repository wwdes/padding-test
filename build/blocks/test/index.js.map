{"version":3,"file":"blocks/test/index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNqD;AAEqC;AAChB;AACrB;AAErD,SAASS,aAAaA,CAACC,WAAW,EAAEC,QAAQ,EAAE;EAC7C,MAAMC,UAAU,GAAGJ,oEAAW,CAACE,WAAW,CAAC,CAACG,IAAI,CAAEC,KAAK,IAAKA,KAAK,CAACC,GAAG,KAAKJ,QAAQ,CAAC;EACnF,OAAOC,UAAU,GAAGA,UAAU,CAACI,KAAK,GAAGC,SAAS;AACjD;AAEA,SAASC,IAAIA,CAAC;EAAEC;AAAW,CAAC,EAAE;EAC7B,MAAM;IAAEL;EAAM,CAAC,GAAGK,UAAU;EAE5B,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,4DAAQ,CAAC;IAC1DqB,OAAO,EAAE;EACV,CAAC,CAAC;EAEFpB,6DAAS,CAAC,MAAM;IACf,MAAMqB,oBAAoB,GAAG,CAAC,CAAC;IAE/B,MAAMC,UAAU,GAAGf,aAAa,CAACU,UAAU,CAACL,KAAK,EAAE,YAAY,CAAC;IAChE,MAAMW,aAAa,GAAGhB,aAAa,CAACU,UAAU,CAACL,KAAK,EAAE,eAAe,CAAC;IAEtEY,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,UAAU,EAAEC,aAAa,CAAC;IAEtD,IAAID,UAAU,EAAED,oBAAoB,CAACC,UAAU,GAAGA,UAAU;IAC5D,IAAIC,aAAa,EAAEF,oBAAoB,CAACE,aAAa,GAAGA,aAAa;IAErEJ,oBAAoB,CAAC;MACpB,GAAGD,iBAAiB;MACpB,GAAGG;IACJ,CAAC,CAAC;EACH,CAAC,EAAE,CAACT,KAAK,EAAEc,OAAO,EAAEC,OAAO,CAAC,CAAC;EAE7B,MAAMC,UAAU,GAAGvB,sEAAa,CAAC;IAChCO,KAAK,EAAEM;EACR,CAAC,CAAC;EAEF,OACCW,oDAAA,CAAAC,2CAAA,QACCD,oDAAA;IAAA,GAASD;EAAU,GAClBC,oDAAA;IAAKE,SAAS,EAAC,qBAAqB;IAACnB,KAAK,EAAE;MAAEQ,OAAO,EAAE;IAAkB;EAAE,GAAC,yIAEvE,CACD,CAAC,EAENS,oDAAA,CAACzB,sEAAiB,MAAoB,CACrC,CAAC;AAEL;AAEAN,oEAAiB,CAAC,cAAc,EAAE;EACjCkB,IAAI;EACJgB,IAAI,EAAEA,CAAA,KAAM;AACb,CAAC,CAAC,C","sources":["webpack://padding-test/external window \"React\"","webpack://padding-test/external window [\"wp\",\"blockEditor\"]","webpack://padding-test/external window [\"wp\",\"blocks\"]","webpack://padding-test/external window [\"wp\",\"element\"]","webpack://padding-test/external window [\"wp\",\"styleEngine\"]","webpack://padding-test/webpack/bootstrap","webpack://padding-test/webpack/runtime/compat get default export","webpack://padding-test/webpack/runtime/define property getters","webpack://padding-test/webpack/runtime/hasOwnProperty shorthand","webpack://padding-test/webpack/runtime/make namespace object","webpack://padding-test/./src/blocks/test/index.js"],"sourcesContent":["module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"styleEngine\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { registerBlockType } from \"@wordpress/blocks\"\r\n\r\nimport { useState, useEffect, useRef, useLayoutEffect, useMemo } from \"@wordpress/element\"\r\nimport { InspectorControls, useBlockProps } from \"@wordpress/block-editor\"\r\nimport { getCSSRules } from \"@wordpress/style-engine\"\r\n\r\nfunction getBlockStyle(styleObject, styleKey) {\r\n\tconst foundStyle = getCSSRules(styleObject).find((style) => style.key === styleKey)\r\n\treturn foundStyle ? foundStyle.value : undefined\r\n}\r\n\r\nfunction edit({ attributes }) {\r\n\tconst { style } = attributes\r\n\r\n\tconst [blockElementStyle, setBlockElementStyle] = useState({\r\n\t\toutline: \"1px dashed red\",\r\n\t})\r\n\r\n\tuseEffect(() => {\r\n\t\tconst newBlockElementStyle = {}\r\n\r\n\t\tconst paddingTop = getBlockStyle(attributes.style, \"paddingTop\")\r\n\t\tconst paddingBottom = getBlockStyle(attributes.style, \"paddingBottom\")\r\n\r\n\t\tconsole.log(\"new padding:\", paddingTop, paddingBottom)\r\n\r\n\t\tif (paddingTop) newBlockElementStyle.paddingTop = paddingTop\r\n\t\tif (paddingBottom) newBlockElementStyle.paddingBottom = paddingBottom\r\n\r\n\t\tsetBlockElementStyle({\r\n\t\t\t...blockElementStyle,\r\n\t\t\t...newBlockElementStyle,\r\n\t\t})\r\n\t}, [style?.spacing?.padding])\r\n\r\n\tconst blockProps = useBlockProps({\r\n\t\tstyle: blockElementStyle,\r\n\t})\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div {...blockProps}>\r\n\t\t\t\t<div className=\"inner-block-wrapper\" style={{ outline: \"1px dashed blue\" }}>\r\n\t\t\t\t\tRed outline is the block boundary, blue outline is the inner block boundary. Padding visualizer is showing padding from previous state.\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<InspectorControls></InspectorControls>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nregisterBlockType(\"padding/test\", {\r\n\tedit,\r\n\tsave: () => null,\r\n})\r\n"],"names":["registerBlockType","useState","useEffect","useRef","useLayoutEffect","useMemo","InspectorControls","useBlockProps","getCSSRules","getBlockStyle","styleObject","styleKey","foundStyle","find","style","key","value","undefined","edit","attributes","blockElementStyle","setBlockElementStyle","outline","newBlockElementStyle","paddingTop","paddingBottom","console","log","spacing","padding","blockProps","createElement","Fragment","className","save"],"sourceRoot":""}